// <auto-generated />
using System;
using BuildingRegistry.Projections.Integration;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NetTopologySuite.Geometries;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace BuildingRegistry.Projections.Integration.Migrations
{
    [DbContext(typeof(IntegrationContext))]
    partial class IntegrationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Be.Vlaanderen.Basisregisters.ProjectionHandling.Runner.ProjectionStates.ProjectionStateItem", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("DesiredState")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset?>("DesiredStateChangedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ErrorMessage")
                        .HasColumnType("text");

                    b.Property<long>("Position")
                        .HasColumnType("bigint");

                    b.HasKey("Name");

                    b.ToTable("ProjectionStates", "integration_building");
                });

            modelBuilder.Entity("BuildingRegistry.Projections.Integration.Building.LatestItem.BuildingLatestItem", b =>
                {
                    b.Property<int>("BuildingPersistentLocalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("building_persistent_local_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("BuildingPersistentLocalId"));

                    b.Property<Geometry>("Geometry")
                        .IsRequired()
                        .HasColumnType("geometry")
                        .HasColumnName("geometry");

                    b.Property<string>("GeometryMethod")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("geometry_method");

                    b.Property<bool>("IsRemoved")
                        .HasColumnType("boolean")
                        .HasColumnName("is_removed");

                    b.Property<string>("Namespace")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("namespace");

                    b.Property<string>("NisCode")
                        .HasColumnType("text")
                        .HasColumnName("nis_code");

                    b.Property<string>("OsloGeometryMethod")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("oslo_geometry_method");

                    b.Property<string>("OsloStatus")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("oslo_status");

                    b.Property<string>("PuriId")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("puri_id");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("status");

                    b.Property<string>("VersionAsString")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("version_as_string");

                    b.Property<DateTimeOffset>("VersionTimestampAsDateTimeOffset")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("version_timestamp");

                    b.HasKey("BuildingPersistentLocalId");

                    b.HasIndex("Geometry");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("Geometry"), "GIST");

                    b.HasIndex("IsRemoved");

                    b.HasIndex("NisCode");

                    b.HasIndex("OsloStatus");

                    b.HasIndex("Status");

                    b.ToTable("building_latest_items", "integration_building");
                });

            modelBuilder.Entity("BuildingRegistry.Projections.Integration.Building.LatestItem.MunicipalityGeometry", b =>
                {
                    b.Property<Geometry>("Geometry")
                        .IsRequired()
                        .HasColumnType("geometry")
                        .HasColumnName("geometry");

                    b.Property<string>("NisCode")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nis_code");

                    b.ToView("municipality_geometries", "integration_municipality");

                    b.ToSqlQuery("SELECT nis_code, geometry FROM integration_municipality.municipality_geometries");
                });

            modelBuilder.Entity("BuildingRegistry.Projections.Integration.BuildingUnit.LatestItem.BuildingUnitAddress", b =>
                {
                    b.Property<int>("BuildingUnitPersistentLocalId")
                        .HasColumnType("integer")
                        .HasColumnName("building_unit_persistent_local_id");

                    b.Property<int>("AddressPersistentLocalId")
                        .HasColumnType("integer")
                        .HasColumnName("address_persistent_local_id");

                    b.HasKey("BuildingUnitPersistentLocalId", "AddressPersistentLocalId");

                    b.HasIndex("AddressPersistentLocalId");

                    b.HasIndex("BuildingUnitPersistentLocalId");

                    b.ToTable("building_unit_addresses", "integration_building");
                });

            modelBuilder.Entity("BuildingRegistry.Projections.Integration.BuildingUnit.LatestItem.BuildingUnitLatestItem", b =>
                {
                    b.Property<int>("BuildingUnitPersistentLocalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("building_unit_persistent_local_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("BuildingUnitPersistentLocalId"));

                    b.Property<int>("BuildingPersistentLocalId")
                        .HasColumnType("integer")
                        .HasColumnName("building_persistent_local_id");

                    b.Property<string>("Function")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("function");

                    b.Property<Geometry>("Geometry")
                        .IsRequired()
                        .HasColumnType("geometry")
                        .HasColumnName("geometry");

                    b.Property<string>("GeometryMethod")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("geometry_method");

                    b.Property<bool>("HasDeviation")
                        .HasColumnType("boolean")
                        .HasColumnName("has_deviation");

                    b.Property<bool>("IsRemoved")
                        .HasColumnType("boolean")
                        .HasColumnName("is_removed");

                    b.Property<string>("Namespace")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("namespace");

                    b.Property<string>("OsloFunction")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("oslo_function");

                    b.Property<string>("OsloGeometryMethod")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("oslo_geometry_method");

                    b.Property<string>("OsloStatus")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("oslo_status");

                    b.Property<string>("PuriId")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("puri_id");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("status");

                    b.Property<string>("VersionAsString")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("version_as_string");

                    b.Property<DateTimeOffset>("VersionTimestampAsDateTimeOffset")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("version_timestamp");

                    b.HasKey("BuildingUnitPersistentLocalId");

                    b.HasIndex("BuildingPersistentLocalId");

                    b.HasIndex("Geometry");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("Geometry"), "GIST");

                    b.HasIndex("IsRemoved");

                    b.HasIndex("OsloStatus");

                    b.HasIndex("Status");

                    b.ToTable("building_unit_latest_items", "integration_building");
                });
#pragma warning restore 612, 618
        }
    }
}
