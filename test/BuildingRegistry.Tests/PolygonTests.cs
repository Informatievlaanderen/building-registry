namespace BuildingRegistry.Tests
{
    using Be.Vlaanderen.Basisregisters.Utilities.HexByteConvertor;
    using BuildingRegistry.Legacy;
    using FluentAssertions;
    using NetTopologySuite.Geometries;
    using Xunit;

    public class PolygonTests
    {
        private readonly Geometry? _polygonSelfTouchingRingFormingHoles;

        public PolygonTests()
        {
            _polygonSelfTouchingRingFormingHoles = WKBReaderFactory.Create().Read(
                "0103000000020000001900000000F40D5303BBEF400057C7CECA67044100C477694BBBEF40806D4A56D467044100701B1455BBEF408081A8D8CF67044100CCDDB50CBBEF408004D824C6670441004053B650BBEF40007FB4DCA86704410094111E95BBEF40003E8A17B267044100C836B0DDBBEF408003885F906704410044AF46FEBBEF400006AF3A81670441009432B056BCEF40803090448E6704410080367952BCEF40007AD6129167044100742CF63FBCEF40008C7A659D67044100842D28D4BFEF408072A1CF1668044100101BDED4BFEF408076BFE71668044100889110EDBFEF4000DFA61C1A680441003C337389BFEF40800801D64968044100902690DABEEF400066E39E9D680441001006A530BBEF4000C45D9A2168044100AC2CD84EBBEF4080FE258613680441000443EBE9B8EF4080B25A3DC667044100F0454970B9EF40806B1AB88267044100A8579886BAEF4080787054A567044100BC857CB8BAEF400014C588AB6704410078EFAF26BBEF40008F2C3DB967044100CCDDB50CBBEF408004D824C667044100F40D5303BBEF400057C7CECA670441070000000078DCF7F0BBEF4080FEA82A936704410030432320BCEF4080EE4F86996704410090EF9220BCEF400057A63C9967044100E876362CBCEF4000BDB99C91670441005CCF1703BCEF4080C04D238C6704410074D36DF1BBEF40009B2DFD926704410078DCF7F0BBEF4080FEA82A93670441"
                    .ToByteArray());
        }

        [Fact]
        public void GivenPolygonWithSelfTouchingRingFormingHoles_ThenNTSPolygonIsNotValid()
        {
            var polygon = _polygonSelfTouchingRingFormingHoles as Polygon;

            polygon.IsValid.Should().BeFalse();
        }

        [Fact]
        public void GivenPolygonWithSelfTouchingRingFormingHoles_ThenGrbPolygonIsValid()
        {
            var polygon = _polygonSelfTouchingRingFormingHoles as Polygon;
            var grbPolygon = new GrbPolygon(polygon);

            grbPolygon.IsValid.Should().BeTrue();
        }

        /// <summary>
        /// DATE: 10/02/2023 (polygon could be changed afterwards)
        /// https://api.basisregisters.vlaanderen.be/v1/gebouwen/15078651
        /// CrabTerreinObjectId = 15885663
        /// GrbOIDN = 3267099
        /// Question client:
        /// Nu hebben we in onze backend een validatie regel staan die zorgt dat we geen geometriÃ«n bewaren die niet aan de 'validity' specificaties voldoen.
        /// We hadden dit toegevoegd omdat gebruikers ook zelf constructies kunnen tekenen en dus de meest gekke dingen produceerden.
        /// Deze validatie zorgde echter een paar weken geleden tot een melding van een deskundige die aangaf dat hij de constructie op [REDACTED] in Aalter niet kon selecteren als gebouw om te inspecteren.
        /// See summary <see cref="GrbPolygon"/> and <see cref="GeometryValidator"/>
        /// </summary>
        [Fact]
        public void GivenGrarBuilding15078651()
        {
            var extendedWkbGeometry = new ExtendedWkbGeometryoByteArray());

            var polygonSelfTouchingRingFormingHoles = extendedWkbGeometry.ToGeometry();

            var polygon = polygonSelfTouchingRingFormingHoles as Polygon;
            var grbPolygon = new GrbPolygon(polygon);

            polygon.IsValid.Should().BeFalse();
            grbPolygon.IsValid.Should().BeTrue();
        }
    }
}
